using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Reflection;
using System.CodeDom.Compiler;

namespace wordle_game
{
    internal class Program
    {
        static void Main(string[] args)
        {
            ConsoleKeyInfo cki;
            Console.CursorVisible = false;
            string pathguess = "";
            string pathwin = "";
            int chose = 1;
            Console.BackgroundColor = ConsoleColor.Black;
            Console.ForegroundColor = ConsoleColor.White;
            Console.SetCursorPosition(7, 5);
            Console.WriteLine("ENGLISH");
            Console.SetCursorPosition(3, 4);
            Console.WriteLine("               ");
            Console.SetCursorPosition(3, 6);
            Console.WriteLine("               ");
                    Console.SetCursorPosition(3, 5);
                    Console.WriteLine("    ");
                    Console.SetCursorPosition(14, 5);
                    Console.WriteLine("    ");
                    Console.BackgroundColor = ConsoleColor.White;
                    Console.ForegroundColor = ConsoleColor.Green;
                    Console.SetCursorPosition(22, 5);
                    Console.WriteLine("TURKISH ");
                    Console.SetCursorPosition(18, 4);
                    Console.WriteLine("               ");
                    Console.SetCursorPosition(18, 6);
                    Console.WriteLine("               ");
                    Console.SetCursorPosition(18, 5);
                    Console.WriteLine("    ");
                    Console.SetCursorPosition(30, 5);
                    Console.WriteLine("   ");
               
                pathguess = "wordlelist.txt";
                pathwin = "worldewinlist.txt";

            string[] lines = File.ReadAllLines(pathguess);
            string[] winlines = File.ReadAllLines(pathwin);
            string[] words = new string[lines.Length];
            string[] wins = new string[winlines.Length];
            int counter = 0;
            foreach (string line in lines)
            {
                words[counter] = line;
                counter++;
            }
            counter = 0;
            foreach (string line in winlines)
            {
                wins[counter] = line;
                counter++;
            }
            Random random = new Random();
            int winnings = 0;
            bool game = true;
            while (game)
            {
                Console.ForegroundColor = ConsoleColor.White;
                Console.Clear();
                int chosenwordnumber = random.Next(0, wins.Length);
                string chosenword = wins[chosenwordnumber];
                char[] word = new char[5];
                int letcount = 0;
                foreach (char c in chosenword)
                {
                    word[letcount] = c;
                    letcount++;
                }
                bool wordlego = true;
                int linecount = 0;
                string[] guess = new string[6];
                Console.SetCursorPosition(15, linecount + 2);
                Console.WriteLine("Put in a 5 letter word");
                Console.SetCursorPosition(50, 10);
                Console.BackgroundColor = ConsoleColor.Black;
                Console.Write("Non-existing letters: ");
                bool win = false;
                char[] unused = new char[30];
                int unusedamount = 0;
                for (int i = 0; i < 30; i++)
                    unused[i] = ' ';
                while (wordlego)
                {
                    for (int j = 0; j < 1; j++)
                    {
                        Console.SetCursorPosition(15, linecount + 5);
                        Console.BackgroundColor = ConsoleColor.DarkGray;
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.WriteLine("      ");
                        Console.SetCursorPosition(20, linecount + 5);
                        Console.BackgroundColor = ConsoleColor.Black;
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.Write("                         ");
                        Console.BackgroundColor = ConsoleColor.DarkGray;
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.SetCursorPosition(15, linecount + 5);
                        guess[linecount] = Console.ReadLine();
                        bool guesscheck = false;
                        for (int i = 0; i < words.Length; i++)
                        {
                            if (words[i] == guess[linecount])
                            {
                                guesscheck = true;
                                i = lines.Length;
                            }
                        }
                        if (!guesscheck)
                        {
                            for (int i = 0; i < wins.Length; i++)
                            {
                                if (wins[i] == guess[linecount])
                                {
                                    guesscheck = true;
                                    i = lines.Length;
                                }
                            }
                        }
                        if (guess[linecount].Length != 5 || !guesscheck)
                        {
                            j = -1;
                        }
                        else
                        {
                            if (guess[linecount] == chosenword)
                            {
                                wordlego = false;
                                win = true;
                            }
                            for (int i = 0; i < 5; i++)
                            {
                                if (guess[linecount][i] == word[i])
                                {
                                    Console.SetCursorPosition(15 + i, linecount + 5);
                                    Console.BackgroundColor = ConsoleColor.DarkGreen;
                                    Console.ForegroundColor = ConsoleColor.White;
                                    Console.WriteLine(guess[linecount][i]);
                                }
                                else
                                {
                                    if (chosenword.Contains(guess[linecount][i].ToString()) && !guess[linecount].Substring(0, i).Contains(guess[linecount][i].ToString()))
                                    {
                                        Console.SetCursorPosition(15 + i, linecount + 5);
                                        Console.BackgroundColor = ConsoleColor.DarkYellow;
                                        Console.ForegroundColor = ConsoleColor.White;
                                        Console.WriteLine(guess[linecount][i]);
                                    }
                                    else
                                    {
                                        Console.SetCursorPosition(15 + i, linecount + 5);
                                        Console.BackgroundColor = ConsoleColor.DarkGray;
                                        Console.ForegroundColor = ConsoleColor.White;
                                        Console.WriteLine(guess[linecount][i]);
                                        for (int a = 0; a < 5; a++)
                                        {
                                            if (!chosenword.Contains(guess[linecount][a]))
                                            {
                                                bool alrun = false;
                                                for (int k = 0; k < 30; k++)
                                                {        
                                                    if (unused[k] == guess[linecount][a])
                                                        alrun = true;                                                  
                                                }
                                                if (!alrun)
                                                {
                                                    unused[unusedamount] = guess[linecount][a];
                                                    unusedamount++;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            Console.SetCursorPosition(50, 10);
                            Console.BackgroundColor = ConsoleColor.Black;
                            Console.Write("Non-existing letters: ");
                            for (int i = 0; i < unusedamount; i++)
                            {
                                Console.Write(unused[i] + " ");
                            }
                            linecount++;
                        }
                    }
                    if (linecount == 6)
                    {
                        wordlego = false;
                    }
                }
                Console.BackgroundColor = ConsoleColor.Black;
                Console.SetCursorPosition(50, 10);
                Console.WriteLine("                                                           ");
                Console.SetCursorPosition(30, 5);
                if (win == true)
                {
                    Console.ForegroundColor = ConsoleColor.Green;
                    winnings++;
                    Console.WriteLine("CONGRATULATIONS YOU WON in " + linecount + " steps! Winnings: " + winnings);
                    Console.SetCursorPosition(0, 12);
                    Console.WriteLine("Press enter for next game");
                    Console.ReadLine();
                }
                else
                {
                    Console.ForegroundColor = ConsoleColor.DarkRed;
                    Console.WriteLine("YOU LOST!");
                    Console.SetCursorPosition(15, 11);
                    Console.BackgroundColor = ConsoleColor.DarkGreen;
                    Console.ForegroundColor = ConsoleColor.White;
                    Console.WriteLine(chosenword);
                    game = false;
                    langmenu = true;
                    chose = 1;
                    while (langmenu)
                    {
                        Console.SetCursorPosition(45, 4);
                        Console.BackgroundColor = ConsoleColor.Black;
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.WriteLine("Play Again?");
                        if (chose == 1)
                        {
                            Console.BackgroundColor = ConsoleColor.White;
                            Console.ForegroundColor = ConsoleColor.Green;
                            Console.SetCursorPosition(49, 7);
                            Console.WriteLine("YES PLS");
                            Console.SetCursorPosition(45, 6);
                            Console.WriteLine("               ");
                            Console.SetCursorPosition(45, 8);
                            Console.WriteLine("               ");
                            Console.SetCursorPosition(45, 7);
                            Console.WriteLine("    ");
                            Console.SetCursorPosition(56, 7);
                            Console.WriteLine("    ");
                            Console.BackgroundColor = ConsoleColor.Black;
                            Console.ForegroundColor = ConsoleColor.White;
                            Console.SetCursorPosition(64, 7);
                            Console.WriteLine("HELL NAW");
                            Console.SetCursorPosition(60, 6);
                            Console.WriteLine("                 ");
                            Console.SetCursorPosition(60, 8);
                            Console.WriteLine("                 ");
                            Console.SetCursorPosition(60, 7);
                            Console.WriteLine("    ");
                            Console.SetCursorPosition(72, 7);
                            Console.WriteLine("     ");
                        }
                        else
                        {
                            Console.BackgroundColor = ConsoleColor.Black;
                            Console.ForegroundColor = ConsoleColor.White;
                            Console.SetCursorPosition(49, 7);
                            Console.WriteLine("YES PLS");
                            Console.SetCursorPosition(45, 6);
                            Console.WriteLine("               ");
                            Console.SetCursorPosition(45, 8);
                            Console.WriteLine("               ");
                            Console.SetCursorPosition(45, 7);
                            Console.WriteLine("    ");
                            Console.SetCursorPosition(56, 7);
                            Console.WriteLine("    ");
                            Console.BackgroundColor = ConsoleColor.White;
                            Console.ForegroundColor = ConsoleColor.Green;
                            Console.SetCursorPosition(64, 7);
                            Console.WriteLine("HELL NAW");
                            Console.SetCursorPosition(60, 6);
                            Console.WriteLine("               ");
                            Console.SetCursorPosition(60, 8);
                            Console.WriteLine("               ");
                            Console.SetCursorPosition(60, 7);
                            Console.WriteLine("    ");
                            Console.SetCursorPosition(72, 7);
                            Console.WriteLine("   ");
                        }
                        if (Console.KeyAvailable)
                        {
                            cki = Console.ReadKey(true);
                            if (cki.Key == ConsoleKey.RightArrow && chose != 2)
                                chose = 2;
                            else if (cki.Key == ConsoleKey.LeftArrow && chose != 1)
                                chose = 1;
                            else if (cki.Key == ConsoleKey.Enter)
                            {
                                langmenu = false;
                                if (chose == 1)
                                    game = true;
                            }
                        }
                    }
                }
                Console.BackgroundColor = ConsoleColor.Black;
                Console.SetCursorPosition(0, 15);
            }
        }
    }
}
